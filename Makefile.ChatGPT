#     unifuzz SQLite loadable extension (Makefile)
#
#     Copyright (C) 2017,2025  Daniel Moore
#
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see [http://www.gnu.org/licenses/].
#
#     Daniel Moore
#     Tigard, Oregon, USA
#     email: mooredan@suncup.net

# =========================
# Platform-Aware Makefile for unifuzz
# =========================

UNAME_S := $(shell uname -s)
UNAME_M := $(shell uname -m)

ifeq ($(UNAME_S),Darwin)
    TARGET_OS := macos
    TARGET_ARCH := $(UNAME_M)
else ifeq ($(UNAME_S),Linux)
    TARGET_OS := linux
    TARGET_ARCH := $(UNAME_M)
else
    $(error Unsupported OS: $(UNAME_S))
endif

# Allow override for cross-compiling to macOS from Linux
CC ?= clang
CFLAGS ?=
LDFLAGS ?=

# =========================
# Paths and Inputs
# =========================


SRC = unifuzz.c
OBJ = unifuzz.o
OUT = unifuzz

WINE_BASE = wine
WINE_INCLUDE = -I$(WINE_BASE)/include -I$(WINE_BASE)/include/wine
WINE_SRCS = \
    $(WINE_BASE)/libs/wine/sortkey.c \
    $(WINE_BASE)/libs/wine/collation.c \
    $(WINE_BASE)/libs/wine/wctype.c \
    $(WINE_BASE)/dlls/kernel32/locale.c

ifeq ($(TARGET_OS),linux)
    OUTFILE = $(OUT).so
    CFLAGS += -fPIC -Wall -O2 $(WINE_INCLUDE)
    LDLIBS += -ldl
    OBJS = $(SRC) $(WINE_SRCS)
    WINE_OBJS = $(WINE_SRCS:.c=.o)
else ifeq ($(TARGET_OS),macos)
    OUTFILE = $(OUT).dylib
    CFLAGS += -Wall -O2
    LDFLAGS += -dynamiclib -undefined dynamic_lookup
    OBJS = $(SRC)
endif

# =========================
# Targets
# =========================

.PHONY: all clean info publish

all: $(OUTFILE)

$(OUTFILE): $(OBJ) $(WINE_OBJS) $
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $^ $(LDLIBS)



clean:
	rm -f *.o $(OUT).so $(OUT).dylib
	find $(WINE_BASE) -name '*.o' -delete

info:
	@echo "Target OS:    $(TARGET_OS)"
	@echo "Target ARCH:  $(TARGET_ARCH)"
	@echo "Compiler:     $(CC)"
	@echo "Output File:  $(OUTFILE)"
	@echo "OBJS:         $(OBJS)"
	@echo "WINE_OBJS:    $(WINE_OBJS)"

# =========================
# Publish Target
# =========================

DIST_DIR = dist
PLATFORM_TAG = $(TARGET_OS)-$(TARGET_ARCH)

publish: all
	mkdir -p $(DIST_DIR)
	cp $(OUTFILE) $(DIST_DIR)/$(OUT)-$(PLATFORM_TAG)$(suffix $(OUTFILE))
	@echo "\u2705 Published: $(DIST_DIR)/$(OUT)-$(PLATFORM_TAG)$(suffix $(OUTFILE))"
